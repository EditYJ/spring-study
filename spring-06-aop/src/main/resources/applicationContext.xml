<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        ">
  <bean id="user" class="com.edityj.service.UserImpl"/>
  <bean id="log" class="com.edityj.log.Log"/>
  <bean id="afterLog" class="com.edityj.log.AfterLog"/>

  <!--  实现spring原生接口，可以获取执行方法的各种信息，更为强大-->
  <!--  <aop:config>-->
  <!--    <aop:pointcut id="pointcut" expression="execution(* com.edityj.service.User.*(..))"/>-->

  <!--    <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
  <!--    <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
  <!--  </aop:config>-->

  <!--  自定义切面类实现aop，简单快速，但是不能获取执行方法的各种信息，有局限性-->
    <bean id="diylog" class="com.edityj.diylog.Log"/>
  <!--  <aop:config>-->
  <!--    <aop:pointcut id="point" expression="execution(* com.edityj.service.User.*(..))"/>-->

  <!--    <aop:aspect ref="diylog">-->
  <!--      <aop:before method="beforeLog" pointcut-ref="point"/>-->
  <!--      <aop:after method="afterLog" pointcut-ref="point"/>-->
  <!--    </aop:aspect>-->
  <!--  </aop:config>-->

  <!--  注解实现-->
  <aop:aspectj-autoproxy/>
</beans>